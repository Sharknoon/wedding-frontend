name: Build
on:
  push:
    branches:
      - main

jobs:
  # switch to bun as soon as "bunx playwright test" runs without failing
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4

      - name: Setup MongoDB
        uses: supercharge/mongodb-github-action@1.10.0
        with:
          mongodb-replica-set: rs0

      # TODO replace at some point with github action
      - name: Setup MinIO
        run: |
          docker run -d -p 9000:9000 \
                      -e "MINIO_ACCESS_KEY=minioadmin" \
                      -e "MINIO_SECRET_KEY=minioadmin" \
                      minio/minio server /data

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test
        env:
          MONGODB_URL: mongodb://localhost/
          MINIO_ENDPOINT: localhost
          MINIO_USE_SSL: false
          MINIO_ACCESS_KEY: minioadmin
          MINIO_SECRET_KEY: minioadmin

  build:
    needs: test
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: | # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  clean:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Delete old image versions
        uses: snok/container-retention-policy@v2
        with:
          image-names: ${{ github.event.repository.name }}
          cut-off: 5 minutes ago UTC
          account-type: personal
          token: ${{ secrets.GITHUB_TOKEN }}
          token-type: github-token
